#
# Backport Automator Constants
#

CURRENTUSERGITHUBNAME=

DEFAULTGITHUBREVIEWER=

#
# Backport Automator
#

function bpr() {
	case "$1" in
		-h)
			echo -e "Continue cherry picking from hash '$4'\n"
			cherryPickCommit $2 $3 $4
			;;
		-s)
			submitBpr $2 $3
			;;
		*)
			echo -e "Peforming automated BPR\n"
			checkoutBackportBranch $1 $2
			cherryPickCommit $1 $2
			;;
	esac
}

function checkoutBackportBranch() {
	git branch $1-$2 $2

	git checkout $1-$2
}

function cherryPickCommit() {
	# $1 is the LPD ticket
	# $2 is the release name (release-2023.q4)
	# $3 is the starting hash

	IFS=$'\n'

	HASHES=($(git log --reverse --pretty=%h --grep $1 master))

	if [[ 0 -eq ${#HASHES[@]} ]]
	then
		echo "No commits match $1. Please update your master branch or confirm the commit message is correct."

		return
	fi

	MESSAGES=($(git log --reverse --pretty=%s --grep $1 master))

	echo "Beginning cherry pick for ${#HASHES[@]} commit(s) that match '$1'"
	echo

	if [ $3 ]
	then
		CHERRYPICK=false
	else
		CHERRYPICK=true
	fi

	for ((i = 0; i < ${#HASHES[@]}; i++))
	do
		if [[ $3 = ${HASHES[i]} ]]
		then
			CHERRYPICK=true
		fi

		if [ $CHERRYPICK = false ]
		then
			continue
		fi

		git cherry-pick ${HASHES[i]} > /dev/null 2>&1

		if [ $? -eq 0 ]
		then
			echo -e "Successfully cherry picked" ${HASHES[i]} ${MESSAGES[i]}
		else
			echo -e "Could not perform cherry pick for" ${HASHES[i]} ${MESSAGES[i]}

			if [[ $(($i + 1)) -lt ${#HASHES[@]} ]]
			then
				echo "Please resolve the conflict(s) and then run 'bpr -h $1 $2 ${HASHES[i + 1]}'"
			else
				echo "Please resolve the conflict(s) and then run 'bpr -s $1 $2'"
			fi

			return 0;
		fi
	done

	IFS=' '

	echo -e "\nDo you wish to test the changes? (y/n): "
	read TEST

	if [[ "$TEST" == y ]] || [[ "$TEST" == Y ]]
	then
		echo -e "\nWhen done testing, submit the backport by running 'bpr -s $1 $2'"

		return 0
	fi

	submitBpr $1 $2
}

function submitBpr() {
	# $1 is the LPD ticket
	# $2 is the release name (release-2023.q4)

	echo -e "\nSubmitting current branch for BPR\n"

	# Get the reviewer's GitHub name
	echo -n "Enter the reviewer's GitHub name and press [ENTER] ($DEFAULTGITHUBREVIEWER): "
	read GITHUBREVIEWER

	if [[ -z $GITHUBREVIEWER ]]
	then
		GITHUBREVIEWER=$DEFAULTGITHUBREVIEWER
	fi

	# Get the current branch name
	CURRENTBRANCH=$(git rev-parse --abbrev-ref HEAD)

	git push origin $CURRENTBRANCH > /dev/null 2>&1

	# Create the pull request
	PULLREQUESTURL=$(git pull-request -m "$1 | $2

https://issues.liferay.com/browse/$1" -b $GITHUBREVIEWER:$2 -h $CURRENTUSERGITHUBNAME:$CURRENTBRANCH)

	echo
	echo Pull Request - $PULLREQUESTURL
}